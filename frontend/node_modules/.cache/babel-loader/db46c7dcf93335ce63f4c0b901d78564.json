{"ast":null,"code":"import API, { LOGIN_USER_KEY } from '../../API';\nimport { signInAction, signUpAction, signOutAction, getProfileAction } from './actions';\nimport { push } from 'connected-react-router';\nimport { updateProfileAction, updateProfileError } from './actions';\nconst api = new API();\nexport const fetchUserFromLocalStorage = () => {\n  return async dispatch => {\n    const userJSON = localStorage.getItem(LOGIN_USER_KEY);\n\n    if (userJSON && userJSON.token !== '') {\n      dispatch(signInAction(JSON.parse(userJSON)));\n    }\n  };\n};\nexport const signUp = (user_name, email, password) => {\n  return async dispatch => {\n    // Validation\n    if (user_name === '' || email === '' || password === '') {\n      alert('Please fill out name, email, and password.');\n      return false;\n    }\n\n    return api.signUp(user_name, email, password).then(user => {\n      dispatch(signUpAction(user));\n      localStorage.setItem(LOGIN_USER_KEY, JSON.stringify(user));\n      dispatch(push('/'));\n    }).catch(error => {\n      alert('Failed to connect API to add a post');\n      console.log(error);\n    });\n  };\n};\nexport const signIn = (email, password) => {\n  return async dispatch => {\n    // Validation\n    if (email === '' || password === '') {\n      alert('Please fill out email and password.');\n      return false;\n    }\n\n    return api.signIn(email, password).then(user => {\n      dispatch(signInAction(user));\n      localStorage.setItem(LOGIN_USER_KEY, JSON.stringify(user));\n      dispatch(push('/'));\n    }).catch(error => {\n      alert('Failed to connect API to add a post');\n      console.log(error);\n    });\n  };\n};\nexport const signOut = () => {\n  return async dispatch => {\n    dispatch(signOutAction());\n    localStorage.removeItem(LOGIN_USER_KEY);\n    dispatch(push('/Signin'));\n  };\n};\nexport const updateProfile = (data = {}, id) => {\n  return async dispatch => {\n    return api.updateProfile(data, id).then(response => {\n      localStorage.setItem(LOGIN_USER_KEY, JSON.stringify(response));\n      console.log(\"response\", response); // dispatch(updateProfileAction(response));\n    }).catch(error => {\n      dispatch(updateProfileError(error.response.data));\n    });\n  };\n};\nexport const getProfile = () => {\n  return async dispatch => {\n    return api.getProfile().then(response => {\n      dispatch(getProfileAction(response));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/musubimanagement/Desktop/Seiart/frontend/src/reducks/users/operations.js"],"names":["API","LOGIN_USER_KEY","signInAction","signUpAction","signOutAction","getProfileAction","push","updateProfileAction","updateProfileError","api","fetchUserFromLocalStorage","dispatch","userJSON","localStorage","getItem","token","JSON","parse","signUp","user_name","email","password","alert","then","user","setItem","stringify","catch","error","console","log","signIn","signOut","removeItem","updateProfile","data","id","response","getProfile"],"mappings":"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","sourcesContent":["import API, { LOGIN_USER_KEY } from '../../API';\nimport { signInAction, signUpAction, signOutAction, getProfileAction } from './actions';\nimport { push } from 'connected-react-router';\nimport { updateProfileAction, updateProfileError } from './actions';\n\nconst api = new API();\n\nexport const fetchUserFromLocalStorage = () => {\n    return async dispatch => {\n        const userJSON = localStorage.getItem(LOGIN_USER_KEY);\n        if (userJSON && userJSON.token !== '') {\n            dispatch(signInAction(JSON.parse(userJSON)));\n        }\n    };\n};\n\nexport const signUp = (user_name, email, password) => {\n    return async dispatch => {\n        // Validation\n        if (user_name === '' || email === '' || password === '') {\n            alert('Please fill out name, email, and password.');\n            return false;\n        }\n\n        return api\n            .signUp(user_name, email, password)\n            .then(user => {\n                dispatch(signUpAction(user));\n                localStorage.setItem(LOGIN_USER_KEY, JSON.stringify(user));\n                dispatch(push('/'));\n            })\n            .catch(error => {\n                alert('Failed to connect API to add a post');\n                console.log(error);\n            });\n    };\n};\n\nexport const signIn = (email, password) => {\n    return async dispatch => {\n        // Validation\n        if (email === '' || password === '') {\n            alert('Please fill out email and password.');\n            return false;\n        }\n\n        return api\n            .signIn(email, password)\n            .then(user => {\n                dispatch(signInAction(user));\n                localStorage.setItem(LOGIN_USER_KEY, JSON.stringify(user));\n                dispatch(push('/'));\n            })\n            .catch(error => {\n                alert('Failed to connect API to add a post');\n                console.log(error);\n            });\n    };\n};\n\nexport const signOut = () => {\n    return async dispatch => {\n        dispatch(signOutAction());\n        localStorage.removeItem(LOGIN_USER_KEY);\n        dispatch(push('/Signin'));\n    };\n};\n\nexport const updateProfile = (data = {}, id) => {\n\treturn async (dispatch) => {\n\t\treturn api\n\t\t\t.updateProfile(data, id)\n\t\t\t.then((response) => {\n\t\t\t\tlocalStorage.setItem(\n\t\t\t\t\tLOGIN_USER_KEY,\n\t\t\t\t\tJSON.stringify(response)\n\t\t\t\t);\n                console.log(\"response\",response);\n\t\t\t\t// dispatch(updateProfileAction(response));\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tdispatch(updateProfileError(error.response.data));\n\t\t\t});\n\t};\n};\n\nexport const getProfile = () => {\n    return async dispatch => {\n        return api.getProfile()\n            .then(response => {\n                dispatch(getProfileAction(response))\n            })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}