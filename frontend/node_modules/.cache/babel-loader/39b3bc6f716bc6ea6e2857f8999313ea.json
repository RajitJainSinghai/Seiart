{"ast":null,"code":"import * as Actions from './actions';\nimport initialState from '../store/initialState';\nexport const commentsReducer = (state = initialState.comments, action) => {\n  switch (action.type) {\n    case Actions.FETCH_comment:\n      console.log('[...state.list.results, action.list]', [...state.results, action.list]);\n      return { ...state,\n        results: action.list.results\n      };\n\n    case Actions.ADD_comment:\n      console.log('[...state.list.results, action.list]', [...state.results, action.list]);\n      return { ...state,\n        results: [...state.results, action.list]\n      };\n\n    case Actions.DELETE_comment:\n      return { ...state,\n        list: state.list.filter(coment => coment.id !== action.id)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/musubimanagement/Desktop/Seiart/frontend/src/reducks/comment/reducers.js"],"names":["Actions","initialState","commentsReducer","state","comments","action","type","FETCH_comment","console","log","results","list","ADD_comment","DELETE_comment","filter","coment","id"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,WAAzB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAO,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGF,YAAY,CAACG,QAAtB,EAAgCC,MAAhC,KAA2C;AACtE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,OAAO,CAACO,aAAb;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoD,CAAC,GAAGN,KAAK,CAACO,OAAV,EAAmBL,MAAM,CAACM,IAA1B,CAApD;AACA,aAAO,EACH,GAAGR,KADA;AAEHO,QAAAA,OAAO,EAAEL,MAAM,CAACM,IAAP,CAAYD;AAFlB,OAAP;;AAIJ,SAAKV,OAAO,CAACY,WAAb;AACIJ,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoD,CAAC,GAAGN,KAAK,CAACO,OAAV,EAAmBL,MAAM,CAACM,IAA1B,CAApD;AACA,aAAO,EACH,GAAGR,KADA;AAEHO,QAAAA,OAAO,EAAE,CAAC,GAAGP,KAAK,CAACO,OAAV,EAAmBL,MAAM,CAACM,IAA1B;AAFN,OAAP;;AAIJ,SAAKX,OAAO,CAACa,cAAb;AACI,aAAO,EACH,GAAGV,KADA;AAEHQ,QAAAA,IAAI,EAAER,KAAK,CAACQ,IAAN,CAAWG,MAAX,CAAkBC,MAAM,IAAIA,MAAM,CAACC,EAAP,KAAcX,MAAM,CAACW,EAAjD;AAFH,OAAP;;AAIJ;AACI,aAAOb,KAAP;AAnBR;AAqBH,CAtBM","sourcesContent":["import * as Actions from './actions';\nimport initialState from '../store/initialState';\nexport const commentsReducer = (state = initialState.comments, action) => {\n    switch (action.type) {\n        case Actions.FETCH_comment:\n            console.log('[...state.list.results, action.list]', [...state.results, action.list]);\n            return {\n                ...state,\n                results: action.list.results\n            };\n        case Actions.ADD_comment:\n            console.log('[...state.list.results, action.list]', [...state.results, action.list]);\n            return {\n                ...state,\n                results: [...state.results, action.list]\n            };\n        case Actions.DELETE_comment:\n            return {\n                ...state,\n                list: state.list.filter(coment => coment.id !== action.id)\n            };\n        default:\n            return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}